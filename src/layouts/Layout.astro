---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

interface Props {
  title: string;
  description?: string;
}

const { title, description = "未来的でミニマルなポートフォリオサイト" } = Astro.props;
---

<!doctype html>
<html lang="ja" data-theme="dark">
  <head>
    <BaseHead title={title} description={description} />
    <script is:inline>
      // Initialize theme
      function initTheme() {
        const savedTheme = localStorage.getItem('theme');
        const theme = savedTheme || 'dark';
        document.documentElement.setAttribute('data-theme', theme);
      }
      
      // Apply theme immediately to prevent flash
      initTheme();
    </script>
  </head>
  <body class="min-h-screen gradient-bg">
    <Header />
    <main class="min-h-screen">
      <slot />
    </main>
    <Footer />

    <script>
      // Theme toggle functionality
      function toggleTheme() {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
      }
      
      // Make toggle function globally available
      window.toggleTheme = toggleTheme;

      // Handle Astro view transitions
      document.addEventListener('astro:after-swap', () => {
        // Reapply theme after page transition
        const savedTheme = localStorage.getItem('theme') || 'dark';
        document.documentElement.setAttribute('data-theme', savedTheme);
        window.toggleTheme = toggleTheme;
      });
    </script>
  </body>
</html>

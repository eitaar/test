---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Portfolio - Home" description="未来的でミニマルなポートフォリオサイト">
  <!-- Hero Section -->
  <section class="relative min-h-screen flex items-center justify-center overflow-hidden">
    <!-- Animated Background -->
    <div class="absolute inset-0 bg-gradient-to-br from-black via-gray-900 to-black">
      <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_center,_var(--color-accent-cyan)_0%,_transparent_50%)] opacity-10"></div>
      <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_80%_20%,_var(--color-accent-purple)_0%,_transparent_50%)] opacity-10"></div>
      <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_20%_80%,_var(--color-accent-pink)_0%,_transparent_50%)] opacity-10"></div>
    </div>
    
    <!-- Floating Particles -->
    <div class="absolute inset-0 overflow-hidden">
      <div class="particle particle-1"></div>
      <div class="particle particle-2"></div>
      <div class="particle particle-3"></div>
      <div class="particle particle-4"></div>
      <div class="particle particle-5"></div>
    </div>
    
    <!-- Hero Content -->
    <div class="relative z-10 text-center px-6 max-w-4xl mx-auto">
      <h1 class="hero-name font-Orbitron font-black text-6xl md:text-8xl lg:text-9xl mb-6 tracking-tight">
        <span class="block opacity-0 translate-y-8">PORTFOLIO</span>
      </h1>
      
      <p class="hero-subtitle text-xl md:text-2xl text-white/80 font-Inter font-light mb-8 max-w-2xl mx-auto opacity-0 translate-y-8">
        Web Designer & Frontend Developer<br>
        <span class="text-cyan-400">Creating digital experiences</span> with modern technologies
      </p>
      
      <div class="hero-buttons flex flex-col sm:flex-row gap-4 justify-center items-center opacity-0 translate-y-8">
        <a 
          href="/works" 
          class="group relative px-8 py-4 bg-gradient-to-r from-cyan-500 to-purple-600 rounded-full font-Inter font-medium text-white hover:scale-105 transition-all duration-300 overflow-hidden"
        >
          <span class="relative z-10">View Works</span>
          <div class="absolute inset-0 bg-gradient-to-r from-purple-600 to-pink-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        </a>
        
        <a 
          href="/about" 
          class="px-8 py-4 border border-white/30 rounded-full font-Inter font-medium text-white hover:bg-white/10 hover:border-white/50 transition-all duration-300"
        >
          About Me
        </a>
      </div>
      
      <!-- Scroll Indicator -->
      <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 opacity-0 scroll-indicator">
        <div class="flex flex-col items-center text-white/60">
          <span class="text-sm font-Inter mb-2">Scroll</span>
          <div class="w-px h-8 bg-gradient-to-b from-white/60 to-transparent animate-pulse"></div>
        </div>
      </div>
    </div>
  </section>
  
  <!-- Quick Overview Section -->
  <section class="py-20 px-6">
    <div class="max-w-6xl mx-auto">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <div class="feature-card text-center p-8 rounded-2xl bg-white/5 backdrop-blur-sm border border-white/10 hover:bg-white/10 transition-all duration-300">
          <div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-cyan-400 to-blue-600 rounded-full flex items-center justify-center">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"/>
            </svg>
          </div>
          <h3 class="text-xl font-Orbitron font-bold mb-2 text-white">Frontend</h3>
          <p class="text-white/70 font-Inter">Modern web applications with React, Astro, and TypeScript</p>
        </div>
        
        <div class="feature-card text-center p-8 rounded-2xl bg-white/5 backdrop-blur-sm border border-white/10 hover:bg-white/10 transition-all duration-300">
          <div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-purple-400 to-pink-600 rounded-full flex items-center justify-center">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5a2 2 0 00-2-2h-4a2 2 0 00-2 2v12a4 4 0 004 4h4a2 2 0 002-2V5z"/>
            </svg>
          </div>
          <h3 class="text-xl font-Orbitron font-bold mb-2 text-white">Design</h3>
          <p class="text-white/70 font-Inter">Minimalist and futuristic UI/UX with attention to detail</p>
        </div>
        
        <div class="feature-card text-center p-8 rounded-2xl bg-white/5 backdrop-blur-sm border border-white/10 hover:bg-white/10 transition-all duration-300">
          <div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-pink-400 to-red-600 rounded-full flex items-center justify-center">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
            </svg>
          </div>
          <h3 class="text-xl font-Orbitron font-bold mb-2 text-white">Performance</h3>
          <p class="text-white/70 font-Inter">Optimized and fast-loading websites with modern technologies</p>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  /* Floating Particles */
  .particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: linear-gradient(45deg, var(--color-accent-cyan), var(--color-accent-purple));
    border-radius: 50%;
    opacity: 0.6;
  }
  
  .particle-1 {
    top: 20%;
    left: 10%;
    animation: float 6s ease-in-out infinite;
  }
  
  .particle-2 {
    top: 60%;
    left: 80%;
    animation: float 8s ease-in-out infinite reverse;
  }
  
  .particle-3 {
    top: 30%;
    left: 70%;
    animation: float 7s ease-in-out infinite;
  }
  
  .particle-4 {
    top: 80%;
    left: 20%;
    animation: float 9s ease-in-out infinite reverse;
  }
  
  .particle-5 {
    top: 40%;
    left: 50%;
    animation: float 5s ease-in-out infinite;
  }
  
  @keyframes float {
    0%, 100% { 
      transform: translateY(0px) rotate(0deg); 
      opacity: 0.6;
    }
    50% { 
      transform: translateY(-20px) rotate(180deg); 
      opacity: 1;
    }
  }
</style>

<script>
  import { gsap } from 'gsap';
  
  // Initialize GSAP animations
  function initAnimations() {
    // Set initial states
    gsap.set('.hero-name span', { opacity: 0, y: 80 });
    gsap.set('.hero-subtitle', { opacity: 0, y: 60 });
    gsap.set('.hero-buttons', { opacity: 0, y: 40 });
    gsap.set('.scroll-indicator', { opacity: 0, y: 20 });
    gsap.set('.feature-card', { opacity: 0, y: 60 });
    
    // Create timeline
    const tl = gsap.timeline({ delay: 0.5 });
    
    // Animate hero content
    tl.to('.hero-name span', {
      duration: 1.2,
      opacity: 1,
      y: 0,
      ease: 'power3.out'
    })
    .to('.hero-subtitle', {
      duration: 1,
      opacity: 1,
      y: 0,
      ease: 'power3.out'
    }, '-=0.6')
    .to('.hero-buttons', {
      duration: 0.8,
      opacity: 1,
      y: 0,
      ease: 'power3.out'
    }, '-=0.4')
    .to('.scroll-indicator', {
      duration: 0.6,
      opacity: 1,
      y: 0,
      ease: 'power3.out'
    }, '-=0.2');
    
    // Animate feature cards on scroll
    gsap.to('.feature-card', {
      scrollTrigger: {
        trigger: '.feature-card',
        start: 'top 80%',
        end: 'bottom 20%',
        toggleActions: 'play none none reverse'
      },
      duration: 0.8,
      opacity: 1,
      y: 0,
      stagger: 0.2,
      ease: 'power3.out'
    });
    
    // Add glow effect to hero name
    gsap.to('.hero-name span', {
      duration: 3,
      textShadow: '0 0 20px rgba(0, 212, 255, 0.8), 0 0 40px rgba(139, 92, 246, 0.6)',
      repeat: -1,
      yoyo: true,
      ease: 'power2.inOut'
    });
  }
  
  // Load ScrollTrigger plugin
  import('gsap/ScrollTrigger').then((ScrollTrigger) => {
    gsap.registerPlugin(ScrollTrigger.ScrollTrigger);
    initAnimations();
  });
  
  // Re-initialize animations after page transitions
  document.addEventListener('astro:after-swap', () => {
    import('gsap/ScrollTrigger').then((ScrollTrigger) => {
      gsap.registerPlugin(ScrollTrigger.ScrollTrigger);
      initAnimations();
    });
  });
</script>
